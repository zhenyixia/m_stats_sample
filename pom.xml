<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.6.RELEASE</version>
	</parent>

	<groupId>com.lyp</groupId>
	<artifactId>stats-sample</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>stats</name>
	<description>Demo project for Spring Boot</description>

	<properties>
		<java.version>1.8</java.version>
		<dubbo.version>3.0.0</dubbo.version>
	</properties>

	<dependencies>
		<!--boot web应用的标志 并且默认使用tomcat为容器，以及包含了 RESTful-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<!--mybatis plus引用，用于替换 mybatis-spring-boot-starter -->
		<!--<dependency>
			<groupId>org.mybatis.spring.boot</groupId>
			<artifactId>mybatis-spring-boot-starter</artifactId>
			<version>2.1.0</version>
		</dependency>-->
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>mybatis-plus-boot-starter</artifactId>
			<version>3.2.0</version>
		</dependency>
		<dependency>
			<groupId>com.baomidou</groupId>
			<artifactId>dynamic-datasource-spring-boot-starter</artifactId>
			<version>2.5.6</version>
		</dependency>
		<!--<dependency>-->
		<!--<groupId>com.alibaba</groupId>-->
		<!--<artifactId>druid-spring-boot-starter</artifactId>-->
		<!--<version>1.1.20</version>-->
		<!--</dependency>-->

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.28</version>
		</dependency>

		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.5</version>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.4</version>
		</dependency>

		<!--lombok工具依赖-->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>1.18.12</version>
		</dependency>

		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>20.0</version>
		</dependency>

		<!--		log4j 2.15.0以上版本修复重大漏洞-->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-to-slf4j</artifactId>
			<version>2.15.0</version>
		</dependency>

		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.9.1</version>
		</dependency>

		<!--配置加密-->
		<dependency>
			<groupId>com.github.ulisesbocchio</groupId>
			<artifactId>jasypt-spring-boot-starter</artifactId>
			<version>2.1.0</version>
		</dependency>

		<!--xls操作-->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi</artifactId>
			<version>3.17</version>
		</dependency>

		<!--xlsx操作-->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml</artifactId>
			<version>3.17</version>
		</dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml-schemas -->
		<dependency>
			<groupId>org.apache.poi</groupId>
			<artifactId>poi-ooxml-schemas</artifactId>
			<version>3.17</version>
		</dependency>

		<!-- 读取大容量excel -->
		<dependency>
			<groupId>com.monitorjbl</groupId>
			<artifactId>xlsx-streamer</artifactId>
			<version>2.1.0</version>
		</dependency>

		<dependency>
			<groupId>org.apache.dubbo</groupId>
			<artifactId>dubbo</artifactId>
			<version>${dubbo.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.dubbo</groupId>
			<artifactId>dubbo-dependencies-zookeeper</artifactId>
			<version>${dubbo.version}</version>
			<type>pom</type>
		</dependency>



		<!-- 分页插件 -->
		<!-- <dependency>
				 <groupId>com.github.pagehelper</groupId>
				 <artifactId>pagehelper-spring-boot-starter</artifactId>
				 <version>1.1.2</version>
		 </dependency>-->

		<!-- alibaba的druid数据库连接池 -->
		<!--<dependency>-->
		<!--<groupId>com.alibaba</groupId>-->
		<!--<artifactId>druid-spring-boot-starter</artifactId>-->
		<!--<version>1.1.10</version>-->
		<!--</dependency>-->

		<!--redis-->
		<!--	<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-redis</artifactId>
			</dependency>-->

		<!--<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>org.junit.vintage</groupId>
					<artifactId>junit-vintage-engine</artifactId>
				</exclusion>
			</exclusions>
		</dependency>-->

		<!--<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
		</dependency>-->

		<!--Thymeleaf是一种用于Web和独立环境的现代服务器端的Java模板引擎。-->
		<!--Thymeleaf的主要目标是将优雅的自然模板带到开发工作流程中，并将HTML在浏览器中正确显示，并且可以作为静态原型，让开发团队能更容易地协作。Thymeleaf能够处理HTML，XML，JavaScript，CSS甚至纯文本。-->
		<!--Thymeleaf使用Spring框架的模块，与许多常见的工具集成在一起，并且可以插入自己的功能，是现代HTML5 JVM Web开发的理想选择，尽管Thymeleaf还有更多其它的功能。-->
		<!--Thymeleaf建立在自然模板的概念之上，以不影响模板作为设计原型的方式将其逻辑注入到模板文件中。 这改善了设计沟通，弥合了前端设计和开发人员之间的理解偏差。-->

		<!-- <dependency>
				 <groupId>org.springframework.boot</groupId>
				 <artifactId>spring-boot-starter-thymeleaf</artifactId>
		 </dependency>-->

		<!--引入freemarker的依赖-->
		<!--<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-freemarker</artifactId>
		</dependency>-->

		<!--阿里巴巴excel操作工具 待研究使用？？-->
		<!--<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>easyexcel</artifactId>
			<version>1.1.2-beat1</version>
		</dependency>-->

		<!--optional=true依赖不会传递，该项目依赖devtools，之后项目如果依赖该项目，需要使用devtools需要重新引入-->
		<!--<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<optional>true</optional>
		</dependency>-->

		<!--swagger 依赖-->
		<!-- <dependency>
				 <groupId>io.springfox</groupId>
				 <artifactId>springfox-swagger2</artifactId>
				 <version>2.2.2</version>
		 </dependency>
		 <dependency>
				 <groupId>io.springfox</groupId>
				 <artifactId>springfox-swagger-ui</artifactId>
				 <version>2.2.2</version>
		 </dependency>-->

		<!--<dependency>
			<groupId>com.github.xiaoymin</groupId>
			<artifactId>knife4j-spring-boot-starter</artifactId>
			<version>2.0.2</version>
		</dependency>-->

	</dependencies>

	<build>
		<!--		加上过滤会导致问题： https://blog.csdn.net/weixin_42061364/article/details/106337233-->
		<!--	<resources>
				<resource>
					<filtering>true</filtering>
					<directory>src/main/resources</directory>
					<excludes>
						<exclude>sql/**</exclude>
					</excludes>
				</resource>
			</resources>-->
		<!--这里写上打成jar包的名称-->
		<finalName>stats</finalName>
		<plugins>
			<!-- 使用assembly插件打可运行jar和tar.gz包 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<!-- 工程主入口 -->
							<mainClass>com.lyp.count.CountApplication</mainClass>
							<addClasspath>true</addClasspath>
							<!-- 此处如果设置，会在Manifest.MF文件中的引入jar包前加上此前缀，此处我注释掉了，否则可运行jar要放在lib同级目录而不是lib里面 -->
							<!--<classpathPrefix>lib/</classpathPrefix>-->
						</manifest>
						<manifestEntries>
							<Class-Path>./</Class-Path>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<finalName>stats</finalName>
					<!-- 不添加assembly的id到打包后的文件名称中 -->
					<appendAssemblyId>false</appendAssemblyId>
					<!--   这个是assembly 所在位置  -->
					<descriptors>
						<descriptor>src/main/resources/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<!--命名随意-->
						<id>make-assembly</id>
						<!--绑定到package生命周期阶段上-->
						<phase>package</phase>
						<goals>
							<!--goal只有两种参数： single 与 help-->
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
